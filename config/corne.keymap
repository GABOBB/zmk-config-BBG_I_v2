/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>


/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
// | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
// | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  Â´  | ESC  |
//                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |
                        bindings = <
   &kp TAB   &kp Q &kp W &kp E &kp R &kp T   &kp Y &kp U  &kp I     &kp O   &kp P     &kp BSPC
   &kp LCTRL &kp A &kp S &kp D &kp F &kp G   &kp H &kp J  &kp K     &kp L   &kp SEMI  &kp SQT
   &kp LSHFT &kp Z &kp X &kp C &kp V &kp B   &kp N &kp M  &kp COMMA &kp DOT &kp GRAVE &kp ESC
                  &kp LGUI &mo 1 &kp SPACE   &kp RET &mo 2 &kp RALT
                        >;
                };
                lower_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |     |     |  7  |  8  |  9  |   | v+  |     |  UP |     |  @   | BKSP |
// | CTRL |     |     |  4  |  5  |  6  |   | v-  | LFT |     | RGT |  %   |  $   |
// | SHFT |     |  0  |  1  |  2  |  3  |   | mute|     | DWN |     |  #   |  !   |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
   &kp TAB    &trans   &trans   &kp N7    &kp N8  &kp N9      &kp C_VOL_UP  &trans   &kp UP     &trans    &kp AT    &kp BSPC
   &bt LCTRL  &trans   &trans   &kp N4    &kp N5  &kp N6      &kp C_VOL_DN  &kp LEFT &trans     &kp RIGHT &kp PRCNT &kp DLLR
   &kp LSHFT  &trans   &kp N0   &kp N1    &kp N2  &kp N3      &kp C_MUTE    &trans   &kp DOWN   &trans    &kp HASH  &kp EXCL 
                          	&kp LGUI  &trans  &kp SPACE   &kp RET       &trans   &kp RALT
                        >;
                };

                raise_layer {
// -----------------------------------------------------------------------------------------
// |  F1  | F2  | F3  | F4  |  F5 | F6  |   |  ^  |  &  |  (  |  )  |  /  |  *   |
// |  F7  | F8  | F9  | F10 | F11 | F12 |   |  -  |  =  |  [  |  ]  |  \  |  `   |
// | BT0  | BT1 | BT2 | BT3 |     |BTCLR|   |  _  |  +  |  {  |  }  | "|" |  ~   |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
   &kp F1       &kp F2       &kp F3        &kp F4        &kp F5  &kp F6        &kp CARET  &kp AMPS   &kp LPAR  &kp RPAR  &kp FSLH  &kp KP_MULTIPLY 
   &kp F7       &kp F8       &kp F9        &kp F10       &kp F11 &kp F12       &kp MINUS  &kp EQUAL  &kp LBKT  &kp RBKT  &kp BSLH  &kp GRAVE
   &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2  &bt BT_SEL 3  &trans  &bt BT_CLR    &kp UNDER  &kp PLUS   &kp LBRC  &kp RBRC  &kp PIPE  &kp TILDE
                    	                   &kp LGUI      &trans  &kp SPACE     &kp RET    &trans     &kp RALT
                        >;
                };
        };
};