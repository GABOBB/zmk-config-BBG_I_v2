/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  Q  |  W  |  E  |  R  |  T  |  ---  |  Y  |  U   |  I  |  O  |  P  | BKSP |
// | CTRL |  A  |  S  |  D  |  F  |  G  |  ---  |  H  |  J   |  K  |  L  |  ;  |  '   |
// | SHFT |  Z  |  X  |  C  |  V  |  B  |  ---  |  N  |  M   |  ,  |  .  |  /  | ESC  |
//                    | GUI | LWR | SPC |  ---  | ENT | RSE  | ALT |
                        bindings = <
   &kp TAB   &kp Q &kp W &kp E &kp R &kp T   &kp Y &kp U  &kp I     &kp O   &kp P    &kp BSPC
   &kp LCTRL &kp A &kp S &kp D &kp F &kp G   &kp H &kp J  &kp K     &kp L   &kp SEMI &kp SQT
   &kp LSHFT &kp Z &kp X &kp C &kp V &kp B   &kp N &kp M  &kp COMMA &kp DOT &kp FSLH &kp ESC
                  &kp LGUI &mo 1 &kp SPACE   &kp RET &mo 2 &kp RALT
                        >;
                };

                lower_layer {
// -----------------------------------------------------------------------------------------
// |  TAB | v+  |     |  7  |  8  |  9  |  ---  |     |     | UP  |     |     | BKSP |
// | CTRL | v-  |     |  4  |  5  |  6  |  ---  |     | LFT | MENU| RGT |     |      |
// | SHFT | vx  |  0  |  1  |  2  |  3  |  ---  |     |     | DWN |     |     | ESC  |
//                    | GUI |     | SPC |  ---  | ENT | BT  | ALT |
                        bindings = <
   &kp TAB    &kp C_VOLUME_UP  &trans   &kp N7   &kp N8   &kp N9        &trans   &trans   &kp UP     &trans        &trans  &kp BSPC
   &kp LCTRL  &kp C_VOLUME_UP  &trans   &kt N4   &kt N5   &kt N6        &trans   &kp LEFT &kt C_MENU &kp RIGHT     &trans  &trans
   &kp LSHFT  &kp C_MUTE       &kt N0   &kt N1   &kt N2   &kt N3        &trans   &trans   &kp DOWN   &trans &trans &trans  &trans
                          	        &kp LGUI &trans   &kp SPACE     &kp RET  &mo 3    &kp RALT
                        >;
                };

                raise_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |     |  @  |  #  |  $  |     |  ---  |  ^  |  *  |  (  |  )  |  /  | BKSP |
// | CTRL |     |  !  |  %  |  &  |     |  ---  |  <  |  >  |  [  |  ]  |  \  |  `   |
// | SHFT |     |  =  |  -  |  ?  |     |  ---  |     |     |  {  |  }  | "|" |  ~   |
//                    | GUI | BT  | SPC |  ---  | ENT |     | ALT |
                        bindings = <
   &kp  TAB   &trans   &kp AT     &kp HASH   &kp DLLR   &trans           &kp CARET    &kp AMPS  &kp LPAR   &kp RPAR &kp FSLH  &kp BSPC
   &kp LCTRL  &trans   &kp EXCL   &kp PRCNT  &kp AMPS   &trans           &kp LT       &kp GT    &kp LBKT   &kp RBKT &kp BSLH  &kp GRAVE
   &kp LSHFT  &trans   &kp EQUAL  &kp MINUS  &kp QMARK  &trans           &trans       &trans    &kp LBRC   &kp RBRC &kp PIPE  &kp TILDE
                                  &kp LGUI   &mo 3      &kp SPACE        &kp RET      &trans    &kp RALT
                        >;
                };

                BT_layer {
// -----------------------------------------------------------------------------------------
// | BT1  | BT3 |     |     |     |BTCLR|  ---  |     | f1  |  f2 |  f3 | f4  |      |
// | BT2  |     |     |     |     |     |  ---  |     |  f5 | f6  |  f7 | f8  |      |
// | BT3  |     |     |     |     |     |  ---  |     |  f9 | f10 | f11 | f12 |      |
//                    |     |     |     |  ---  |     |     |     |
                        bindings = <
   &bt BT_SEL 0  &bt BT_SEL 3   &trans   &OUT OUT_BLE   &trans   &bt BT_CLR   &trans   &kp F1   &kp F2  &kp F3   &kp F4 &trans   
   &bt BT_SEL 1  &trans         &trans   &OUT OUT_USB   &trans   &trans       &trans   &kp F5  &kp F6   &kp F7  &kp F8  &trans
   &bt BT_SEL 2  &trans         &trans   &trans         &trans   &trans       &trans   &kp F9  &kp F10  &kp F11 &kp F12 &trans
                    	                 &trans         &trans   &trans       &trans   &trans  &trans
                        >;
                };                
        };
};
